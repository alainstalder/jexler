subprojects {
  apply plugin: 'groovy'
  apply plugin: 'eclipse'
  apply plugin: 'maven'
  apply plugin: 'jacoco'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  version = '3.0.3-SNAPSHOT' // IMPORTANT: keep in sync with version in JexlerContextListener

  project.group = 'net.jexler'

  jar {
    manifest.attributes provider: 'gradle'
  }

  repositories {
    mavenCentral()
  }

  configurations {
    jansiForGroovydoc.extendsFrom(runtime)
    testArtifacts
  }

  dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.8:indy'
    compile 'org.apache.ivy:ivy:2.4.0'
    compile('ch.grengine:grengine:1.2.0') {
      exclude group: 'org.codehaus.groovy', module: 'groovy'
    }
    compile 'org.slf4j:slf4j-api:1.7.22'
    compile 'ch.qos.logback:logback-classic:1.2.1'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
      exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'junit:junit:4.12'
    jansiForGroovydoc 'org.fusesource.jansi:jansi:1.14'
  }

  groovydoc {
    groovyClasspath = project.configurations.jansiForGroovydoc
  }

  task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task groovydocJar(type: Jar, dependsOn:groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
  }

  task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
  }

  artifacts {
    archives sourcesJar 
    archives groovydocJar
    testArtifacts testJar
  }
   
  test {
    //testLogging.showStandardStreams = true
    useJUnit {
      includeCategories 'net.jexler.test.FastTests'
    }
    //afterTest { desc, result ->
    //  println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    //}
  }

  jacoco {
    toolVersion = "0.7.9"
  }

  task slowTests(type: Test, dependsOn: 'test') {
    //testLogging.showStandardStreams = true
    useJUnit {
      includeCategories 'net.jexler.test.SlowTests'
    }
  }
  
  task demo(type: Test) {
    testLogging.showStandardStreams = true
    useJUnit {
      includeCategories 'net.jexler.test.DemoTests'
    }
  }

  task jacoco(type:JacocoReport, dependsOn: 'slowTests') {
    executionData test, slowTests
    sourceSets sourceSets.main
  }

  task jacocoFast(type:JacocoReport, dependsOn: 'test') {
    executionData test
    sourceSets sourceSets.main
  }

  task pom {
    doLast {
      pom {
        project {
          name 'jexler'
          description project.description
          url 'https://www.jexler.net/'
          packaging project.ext.pkg
          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'https://www.apache.org/licenses/LICENSE-2.0'
              distribution 'repo'
            }
          }
          scm {
            url 'https://github.com/jexler/jexler'
            connection 'https://github.com/jexler/jexler.git'
            developerConnection 'https://github.com/jexler/jexler.git'
          }
          developers {
            developer {
              id 'jexler'
              name 'Jex Jexler (whois jexler.net)'
              email 'jex@jexler.net'
            }
          }
        }
      }.writeTo("$buildDir/libs/${project.name}-${project.version}.pom")
    }
  }

}
