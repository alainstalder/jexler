subprojects {
  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'maven'
  apply plugin: 'jacoco'

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  version = '1.0.14-SNAPSHOT' // IMPORTANT: keep in sync with version in JexlerContextListener

  project.group = 'net.jexler'

  jar {
    manifest.attributes provider: 'gradle'
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    testCompile 'junit:junit:4.12'
  }

  task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifacts {
    archives sourcesJar 
    archives javadocJar 
  }
   
  test {
	//testLogging.showStandardStreams = true
	useJUnit {
      includeCategories 'net.jexler.test.FastTests'
    }
	//afterTest { desc, result ->
	//  println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
	//}
  }

  jacoco {
    toolVersion = "0.7.1.201405082137"
  }

  task slowTests(type: Test, dependsOn: 'test') {
	//testLogging.showStandardStreams = true
    useJUnit {
      includeCategories 'net.jexler.test.SlowTests'
    }
  }
  
  task demo(type: Test) {
    testLogging.showStandardStreams = true
    useJUnit {
      includeCategories 'net.jexler.test.DemoTests'
    }
  }

  task jacoco(type:JacocoReport, dependsOn: 'slowTests') {
    executionData test, slowTests
    sourceSets sourceSets.main
  }
  /*task jacoco(type:JacocoReport, dependsOn: 'test') {
    executionData test
    sourceSets sourceSets.main
  }*/

  task pom << {
    pom {
	  project {
		name 'jexler'
		description project.description
		url 'http://www.jexler.net/'
        packaging project.ext.pkg
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }
		scm {
		  url 'https://github.com/jexler/jexler'
		  connection 'https://github.com/jexler/jexler.git'
		  developerConnection 'https://github.com/jexler/jexler.git'
		}
        developers {
          developer {
            id 'jexler'
            name 'Jex Jexler (whois jexler.net)'
            email 'jex@jexler.net'
          }
        }
	  }
    }.writeTo("$buildDir/libs/${project.name}-${project.version}.pom")
  }

}
