subprojects {
  apply plugin: 'groovy'
  apply plugin: 'eclipse'
  apply plugin: 'maven'
  apply plugin: 'jacoco'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  version = '4.0.2-SNAPSHOT' // IMPORTANT: keep in sync with version in JexlerContextListener

  project.group = 'ch.artecat.jexler'

  ext {
    groovyVersion='2.5.5'
    grengineVersion='3.0.0'
    ivyVersion='2.4.0'
    slf4jVersion='1.7.25'
    logbackVersion='1.2.3'
    spockVersion='1.2-groovy-2.5'
    junitVersion='4.12'
    jansiVersion='1.17.1'
  }

  jar {
    manifest.attributes provider: 'gradle'
  }

  repositories {
    mavenCentral()
  }

  configurations {
    groovyDoc.extendsFrom runtime
    testArtifacts
  }

  dependencies {
    compile "org.codehaus.groovy:groovy:$groovyVersion:indy"
    compile("ch.artecat.grengine:grengine:$grengineVersion") {
      exclude group: 'org.codehaus.groovy', module: 'groovy'
    }
    compile "org.apache.ivy:ivy:$ivyVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"

    // Unit tests
    testCompile("org.spockframework:spock-core:$spockVersion") {
      //exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile "junit:junit:$junitVersion"

    // Groovydoc
    groovyDoc "org.fusesource.jansi:jansi:$jansiVersion"
    groovyDoc "org.codehaus.groovy:groovy-groovydoc:$groovyVersion"
    groovyDoc "org.codehaus.groovy:groovy-ant:$groovyVersion"
  }

  tasks.withType(Groovydoc) {
    groovyClasspath = project.configurations.groovyDoc
  }

  groovydoc {
    //
  }

  task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task groovydocJar(type: Jar, dependsOn:groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
  }

  task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
  }

  artifacts {
    archives sourcesJar 
    archives groovydocJar
    testArtifacts testJar
  }
   
  test {
    //testLogging.showStandardStreams = true
    useJUnit {
      includeCategories 'ch.artecat.jexler.test.FastTests'
    }
    //afterTest { desc, result ->
    //  println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    //}
  }

  jacoco {
    toolVersion = "0.8.2"
  }

  task slowTests(type: Test, dependsOn: 'test') {
    //testLogging.showStandardStreams = true
    useJUnit {
      includeCategories 'ch.artecat.jexler.test.SlowTests'
    }
  }
  
  task demoTests(type: Test) {
    testLogging.showStandardStreams = true
    useJUnit {
      includeCategories 'ch.artecat.jexler.test.DemoTests'
    }
  }

  task jacoco(type:JacocoReport, dependsOn: 'slowTests') {
    executionData test, slowTests
    sourceSets sourceSets.main
  }

  task jacocoFast(type:JacocoReport, dependsOn: 'test') {
    executionData test
    sourceSets sourceSets.main
  }

  task pom {
    doLast {
      pom {
        project {
          name 'jexler'
          description project.description
          url 'https://www.artecat.ch/jexler/'
          packaging project.ext.pkg
          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'https://www.apache.org/licenses/LICENSE-2.0'
              distribution 'repo'
            }
          }
          scm {
            url 'https://gitlab.com/jexler/jexler'
            connection 'https://gitlab.com/jexler/jexler.git'
            developerConnection 'https://gitlab.com/jexler/jexler.git'
          }
          developers {
            developer {
              id 'jexler'
              name 'Jex Jexler (Alain Stalder)'
              email 'jexler@artecat.ch'
            }
          }
        }
      }.writeTo("$buildDir/libs/${project.name}-${project.version}.pom")
    }
  }

}
